# (c) All rights reserved. ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE, Switzerland, VPSI, 2017
---
sudo: required

services:
- docker

language: python

python:
- 3.5

env:
  global:
    - PLUGINS_CONFIG_BASE_PATH=wordpress/tests/plugins/
    - GITHUB_API_USER=domq
    # This is the GitHub API token, encrypted (so that it can be
    # safely stored on GitHub) with a public key whose corresponding
    # private key is owned by Travis. To regenerate it:
    #
    # 1. Create a token as per
    #    https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line
    #    You don't need or want to grant any additional permissions
    #    (checkboxes in the Web UI) to this token
    # 2. `cd` to the wp-ops Git work tree, type `travis login` and
    #    authenticate using your GitHub credentials
    # 3. Type
    #
    #       travis encrypt GITHUB_API_TOKEN=aaaaabbbbbbcccccc
    #
    #    replacing `aaaaabbbbbbcccccc` with the token you obtained at step 1
    - secure: "PZd/0E0sbNpyb1LCfreRpq1z/ojG+8IiW5RL7A4pn1Bk6/ZRFFXCs6tk047CyADFCtlwWSOAKI/BOB/eHmBuyIgBV7ImWNJl6pR6NjRwjbuV94r3OTRslIXzU/sCP8CAbtSiUDwMIqKah7sdEFHDfHNsGqJd/jlFrPNhD7rjwNSY4NQUMxZXAbX6GMghzNVDK2bqw4xpqiyQ2P3Ch0BR77O2pyQBUYSbd1doQz3GEAO7ap5lls3lrMWB8bdDBMJjnoYsWkYMEPNyLCpk60rNLFkCr/4W6uv76EugYAjfiMTsPmjgSV9dANeg2A9647haMK412+vY6HsQw6UntfIYSEF3Vb3olaofIXOUiFgI/Fdjw1KQ1Objb/Sh63PuDwJ5Ipirlm5ryIt/fuuJ6oKBBethhs7LNJcxiOHz3qEgbrfegtgc7MGFQ5QZ2u61BFHPSglgBBTTrBpl7HyifkVbZ3c2faycfzgz7FzIBDQ+3tCRx8BhGzMbETxCbv8c7z3nfR3M6k7ymnS2HVllKGNQOTiF7W8iK3eZ81Lyx4ZPOl+MqDiC50dy5aT1x+xLnyVek7j49LuOenucRuOEWeKhNM8qmJ34qC2GsuVRMB5TWPUFXNA3jckZwj7ZrypBZjoQorw1n9rtcJ23+qeqJmJp50QcoqvHMB/9chdAmAj9caA="


before_install:
# We have to clone this repository because Travis will always try to build images defined by "build" entry in
# "docker-compose.yml", even if we told him to not do it. Because we have to keep "build" entries in "docker-compose.yml"
# file, we have to clone this repo before doing "make up". Furthermore, building images will help to check if everything
# is ok in images files.
- git clone https://github.com/epfl-idevelop/wp-ops.git /home/travis/build/epfl-idevelop/wp-ops
- docker build \
     --build-arg "GITHUB_API_USER=${GITHUB_API_USER}"           \
     --build-arg "GITHUB_API_TOKEN=${GITHUB_API_TOKEN}"         \
     -t epflidevelop/os-wp-base /home/travis/build/epfl-idevelop/wp-ops/docker/wp-base
- docker build /home/travis/build/epfl-idevelop/wp-ops/docker/httpd
- docker build /home/travis/build/epfl-idevelop/wp-ops/docker/mgmt
- cp .env.sample .env


install:
- make up
# On searching containers by labels, see
# https://docs.docker.com/engine/reference/commandline/ps/#filtering
# The labels introduced by docker-compose don't seem to be documented
# anywhere, but you can list them with "docker inspect". The closest
# we have to something official would be this pull request's comment:
# https://github.com/docker/compose/pull/1356#issuecomment-99801372
- docker exec $(docker ps -q --filter "label=com.docker.compose.service=mgmt") make -C /srv/$WP_ENV/jahia2wp bootstrap-mgmt

script:
- ci_env=`bash <(curl -s https://codecov.io/env)`
- docker exec --user=www-data $ci_env $(docker ps -q --filter "label=com.docker.compose.service=mgmt") make -C /srv/$WP_ENV/jahia2wp test-travis

